{
	// Place your GlobalSearch workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Create Search Provider": {
		"scope": "lua",
		"prefix": "create-search-provider",
		"body": [
			"---@class ns",
			"local ns = select(2, ...)",
			"",
			"local AceLocale = LibStub(\"AceLocale-3.0\")",
			"local L = AceLocale:GetLocale(\"GlobalSearch\")",
			"",
			"---@class $1SearchProvider : SearchProvider",
			"local $1SearchProvider = {",
			"\tname = L.$2,",
			"\tcategory = L.global_search,",
			"}",
			"",
			"---@return SearchItem[]",
			"function $1SearchProvider:Get()",
			"\tif not self.cache then",
			"\t\tself.cache = self:Fetch()",
			"\tend",
			"\treturn self.cache",
			"end",
			"",
			"---@return SearchItem[]",
			"function $1SearchProvider:Fetch()",
			"\t---@type SearchItem[]",
			"\tlocal items = {}",
			"\treturn items",
			"end",
			"",
			"GlobalSearchAPI:RegisterProvider(\"GlobalSearch_$1\", $1SearchProvider)"
		]
	}
}
